imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: doctrine_extensions.yml }
    - { resource: "@LinkfloydCoreBundle/Resources/config/services.yml" }
    - { resource: "@LinkfloydApiBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: tr
    homepage_listing_post_limit: 30
    api_listing_post_limit: 30

framework:
    #esi:             ~
    translator:      { fallbacks: ["en"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: [103.21.244.0/22, 103.22.200.0/22, 103.31.4.0/22, 104.16.0.0/12, 108.162.192.0/18, 131.0.72.0/22, 141.101.64.0/18, 162.158.0.0/15, 172.64.0.0/13, 173.245.48.0/20, 188.114.96.0/20, 190.93.240.0/20, 197.234.240.0/22, 198.41.128.0/17, 199.27.128.0/21]
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
      - 'bootstrap_3_layout.html.twig'
    globals:
      google_analytics_identity: '%google_analytics_identity%'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: true
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Linkfloyd\Bundle\UserBundle\Entity\User
    from_email:
        address:        noreply@linkfloyd.com
        sender_name:    Linkfloyd

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Linkfloyd Migrations

fos_rest:
    param_fetcher_listener: force
    routing_loader:
        default_format: json                            # All responses should be JSON formated
        include_format: false                           # We do not include format in request, so that all responses
                                                        # will eventually be JSON formated
fos_oauth_server:
    db_driver:           orm
    client_class:        Linkfloyd\Bundle\ApiBundle\Entity\Client
    access_token_class:  Linkfloyd\Bundle\ApiBundle\Entity\AccessToken
    refresh_token_class: Linkfloyd\Bundle\ApiBundle\Entity\RefreshToken
    auth_code_class:     Linkfloyd\Bundle\ApiBundle\Entity\AuthCode
    service:
        #user_provider: fos_user.user_manager             # This property will be used when valid credentials are given to load the user upon access token creation
        user_provider: fos_user.user_provider.username_email             # This property will be used when valid credentials are given to load the user upon access token creation

nelmio_api_doc: ~

fos_comment:
  acl: true
  service:
    acl:
      thread:  fos_comment.acl.thread.roles
      comment: fos_comment.acl.comment.roles
      vote:    fos_comment.acl.vote.roles
    manager:
      thread:  fos_comment.manager.thread.acl
      comment: fos_comment.manager.comment.acl
      vote:    fos_comment.manager.vote.acl
  db_driver: orm
  class:
    model:
     comment: Linkfloyd\Bundle\CoreBundle\Entity\Comment
     thread: Linkfloyd\Bundle\CoreBundle\Entity\Thread
     vote: Linkfloyd\Bundle\CoreBundle\Entity\Vote
  acl_roles:
    comment:
      create: IS_AUTHENTICATED_FULLY
      view: IS_AUTHENTICATED_ANONYMOUSLY
      edit: ROLE_ADMIN
      delete: ROLE_ADMIN
    thread:
      create: IS_AUTHENTICATED_ANONYMOUSLY
      view: IS_AUTHENTICATED_ANONYMOUSLY
      edit: ROLE_ADMIN
      delete: ROLE_ADMIN
    vote:
      create: ROLE_ADMIN
      view: ROLE_ADMIN
      edit: ROLE_ADMIN
      delete: ROLE_ADMIN

assetic:
    bundles: [ "FOSCommentBundle" ]
